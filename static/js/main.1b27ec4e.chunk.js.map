{"version":3,"sources":["components/home.js","components/signup.js","components/signin.js","components/signout.js","components/bookform.js","components/friendData.js","components/finduser.js","App.js","serviceWorker.js","index.js","images/mug-book.png","images/open-book.png"],"names":["Home","props","componentDidMount","usernameData","localStorage","getItem","console","log","setState","savedusername","checkusername","state","welcomeContent","this","className","Row","Col","md","span","offset","src","homeImage","React","Component","SignUp","handleClear","clear","handleChange","e","target","name","value","handleSubmit","event","dataSend","firstName","toLowerCase","lastName","username","id","date","moment","toDate","author","title","status","format","rating","overview","image","preventDefault","searchloading","submitting","fetch","headers","method","body","JSON","stringify","then","response","usernamedone","done","setItem","updateNav","json","bookid","pageContent","onClick","onSubmit","type","onChange","disabled","class","SignIn","getAllData","allData","i","length","usernamefound","SignOut","loggedout","BookForm","usernameProps","getGoogleAPI","sortData","allDataSorted","googleAPIData","filter","gs$cell","col","push","content","$t","sortedData","feed","entry","userData","one","currentID","allIDs","b","parseInt","split","newID","sort","a","searchButton","handleSearch","searchError","searchForm","query","totalItems","searchData","searchComplete","showSearchForm","currentlyReading","books","addSearchResults","description","currentDate","adding","form","imageUrl","searchAgain","showAddForm","required","updateBook","each","updateRating","dateUpdating","editing","handleSubmitEdit","dataEdit","handleDateChange","updateStatus","updateTest","test","updateFormat","checkDelete","checking","handleDeleteYes","setTimeout","handleDeleteNo","removeForm","bookData","currentBooks","activeBook","items","volumeInfo","imageLinks","thumbnail","key","subtitle","authors","alt","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","book","map","sm","htmlFor","aria-hidden","isValid","href","allBooks","bookCount","renderReading","placeholder","renderSearchData","defaultValue","Fragment","selected","renderFinishedData","renderWantData","FriendData","friendData","data","toUpperCase","slice","index","FindUser","pickedUser","userLast","showForm","showResults","selectedFirst","userFoundData","user","first","friendBooks","capFirstLetter","string","charAt","friend","friendsBooks","numUsersFound","renderFriend","App","mainNav","exact","activeClassName","to","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1b27ec4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport homeImage from '../images/mug-book.png';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            checkusername: false,\r\n            savedusername: ''        }\r\n    }\r\n    componentDidMount = () => {\r\n        let usernameData = localStorage.getItem('username');\r\n        console.log('local storage', usernameData)\r\n        if(usernameData){\r\n            this.setState({\r\n                savedusername: usernameData,\r\n                checkusername: true\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        const { savedusername, checkusername } = this.state;\r\n        let welcomeContent;\r\n        if(checkusername){\r\n          welcomeContent = \r\n            <div>\r\n                <h3>Welcome back {savedusername} </h3>\r\n                <p>Use the navigation to view your book list, make updates, add new books.</p>\r\n            </div>\r\n        }else{\r\n          welcomeContent =\r\n            <div >\r\n                <h2>Welcome to your new favorite reading tracker</h2>\r\n                <p>Login to view your books or sign-up to create an account and start your list of books.</p>\r\n            </div>\r\n                   \r\n        }\r\n        return(\r\n            <article className=\"welcome\">\r\n                <Row>\r\n                <Col md={{ span: 6, offset: 2 }}>\r\n                        {welcomeContent}\r\n                </Col>\r\n                <Col md={{ span: 3, offset: 1 }}>\r\n                        <div>\r\n                        <img src={homeImage} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </article>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            submitting: false,\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            checkusername: false,\r\n            savedusername: '',\r\n            done: false,\r\n            usernamedone: '',\r\n            bookid: '',\r\n            searchloading: false\r\n        }\r\n\r\n    }\r\n    componentDidMount =() => {\r\n        console.log('mounted')\r\n        let usernameData = localStorage.getItem('username');\r\n        console.log(usernameData)\r\n        if(usernameData){\r\n            this.setState({\r\n                savedusername: usernameData,\r\n                checkusername: true\r\n            })\r\n        }\r\n    }\r\n    handleClear = () => {\r\n        console.log('reached clear')\r\n        localStorage.clear();\r\n        this.setState({checkusername: false})\r\n    }\r\n    handleChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    handleSubmit = event => {\r\n        const dataSend = {\r\n            firstName: this.state.firstName.toLowerCase(),\r\n            lastName: this.state.lastName.toLowerCase(),\r\n            username: this.state.username,\r\n            id: this.state.username+'id=0',\r\n            date: moment().toDate(),\r\n            author: 'null',\r\n            title: 'null',\r\n            status: 'null',\r\n            format: 'null',\r\n            rating: 'null',\r\n            overview: 'null',\r\n            image: 'null'\r\n        }\r\n        console.log(dataSend)\r\n        event.preventDefault()\r\n        this.setState({\r\n            searchloading: true\r\n        })\r\n        console.log('before fetch', this.state.submitting)\r\n        fetch('https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(dataSend)\r\n        }).then( (response) => {\r\n            this.setState({\r\n                usernamedone: this.state.username,\r\n                searchloading: false,\r\n                firstName: '',\r\n                lastName: '',\r\n                username: '',\r\n                done: true\r\n            })\r\n            console.log('done user', this.state.usernamedone)\r\n            localStorage.setItem('username', this.state.usernamedone);\r\n            this.props.updateNav();\r\n            return response.json()\r\n           \r\n        });\r\n      }\r\n      render(){\r\n        const { firstName, lastName, username, usernamedone, savedusername, checkusername, searchloading, done} = this.state;\r\n        const submitting = this.state.submitting;\r\n        let pageContent;\r\n        if(checkusername){\r\n            pageContent = \r\n            <div className=\"login\">\r\n                    <p>Looks like you have already signed up as {savedusername}</p>\r\n                    <p>Not {savedusername} or want to sign up another user? <span onClick={this.handleClear}>Logout and sign up as new user.</span></p>\r\n            </div>\r\n        }else if(done){\r\n            pageContent = \r\n            <div className=\"login\">\r\n                        <p>Thanks for signing up {usernamedone}\r\n                        </p>\r\n            </div>\r\n        }else if(!done && !searchloading){\r\n            pageContent =\r\n            <div  className=\"login\">\r\n            <form onSubmit={this.handleSubmit} className={submitting ? 'loading' : 'submit-form'}>\r\n                <p>\r\n                    <label >First Name:<br />\r\n                    <input type=\"text\" name='firstName' value={firstName} onChange={this.handleChange} />\r\n                        </label>\r\n                </p>\r\n                <p>\r\n                    <label >Last Name:<br />\r\n                        <input type=\"text\" name='lastName' value={lastName} onChange={this.handleChange} /> \r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>Create your username: <br />\r\n                        <input type=\"text\" name=\"username\" value={username}  onChange={this.handleChange} />\r\n                    </label>\r\n                </p>\r\n                <input type='submit' disabled={submitting} value='Submit'></input>\r\n            </form>\r\n            </div>\r\n        }\r\n        return(\r\n            <div className=\"main-body\">\r\n                <h2>Sign up as a new user</h2>\r\n                <hr  />\r\n                {searchloading && \r\n                    <div class=\"progress-infinite\">\r\n                        <div class=\"progress-bar3\" >\r\n                        </div>                       \r\n                    </div> \r\n                }\r\n                {pageContent} \r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","import React from 'react';\r\nimport openBook from '../images/open-book.png';\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            submitting: false,\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            checkusername: false,\r\n            savedusername: '',\r\n            done: false,\r\n            usernamedone: '',\r\n            usernamefound: false,\r\n            allData: [],\r\n            searchloading: false\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.getAllData()\r\n        let usernameData = localStorage.getItem('username');\r\n        console.log(usernameData)\r\n        if(usernameData){\r\n            this.setState({\r\n                savedusername: usernameData,\r\n                checkusername: true\r\n            })\r\n        }\r\n    }\r\n    getAllData = () => {\r\n        fetch('https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351')\r\n            .then( (response) => {\r\n                return response.json()\r\n            }).then( (json) => {\r\n                this.setState({\r\n                    allData: json\r\n                })\r\n                console.log('data', this.state.allData)\r\n            })\r\n    }\r\n    handleChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n\r\n    handleSubmit = event => {\r\n        let allData = this.state.allData;\r\n        this.setState({\r\n            searchloading: true\r\n        })\r\n        for(var i=0; i<allData.length; i++){\r\n            console.log(allData[i].username)\r\n            if(allData[i].username === this.state.username){\r\n                console.log('we found ', this.state.username, ' and ', allData[i].username);\r\n                this.setState({usernamefound: true})\r\n                localStorage.setItem('username', this.state.username);\r\n\r\n            }\r\n        }\r\n        this.setState({\r\n            searchloading: false\r\n        })\r\n    \r\n    }\r\n      render(){\r\n        const { username, usernamedone, savedusername, checkusername, searchloading, done, usernamefound} = this.state;\r\n        const submitting = this.state.submitting;\r\n        let pageContent;\r\n        if(checkusername){\r\n            pageContent = \r\n            <div className=\"login\">\r\n                    <p>Looks like you are already signed in as {savedusername}</p>\r\n                    <p>Not {savedusername} or want to sign up another user? Logout and then login or sign-up.</p>\r\n                    \r\n            </div>\r\n        }else if(done){\r\n            pageContent = \r\n            <div className=\"login\">\r\n                        <p>Thanks for signing in {usernamedone}</p>\r\n                        \r\n            </div>\r\n        }else if(usernamefound && !searchloading){\r\n            pageContent = \r\n            <div className=\"login\">\r\n                        <h3>Welcome back {username}</h3>\r\n                        <p>Use the navigation to view your book list, make updates, add new books.</p>   \r\n                         \r\n            </div>\r\n        }\r\n        else{\r\n            pageContent =\r\n            <div className=\"login\">\r\n            <form onSubmit={this.handleSubmit} className={submitting ? 'loading' : 'submit-form'}>\r\n                <p>\r\n                    <label>Enter your username: <br />\r\n                        <input type=\"text\" name=\"username\" value={username}  onChange={this.handleChange} />\r\n                    </label>\r\n                </p>\r\n                <input type='submit' onClick={this.props.updateNav} disabled={submitting} value='Sign In'></input>\r\n            </form>\r\n            </div>\r\n        }\r\n        return(\r\n            <div className=\"main-body\">\r\n                <h2>User login</h2>\r\n                <hr  />\r\n                {searchloading && \r\n                    <div class=\"progress-infinite\">\r\n                        <div class=\"progress-bar3\" >\r\n                        </div>                       \r\n                    </div> \r\n                }\r\n                {pageContent} \r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;\r\n\r\n","import React from 'react';\r\n\r\nclass SignOut extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: '',\r\n            loggedout: false\r\n        }\r\n\r\n    }\r\n    componentDidMount = () => {\r\n        let username = this.props.username;\r\n        console.log('username on signout', username)\r\n        if(username){\r\n            this.setState({\r\n                savedusername: username            })\r\n        }\r\n    }\r\n    handleClear = () => {\r\n        this.props.updateNav();\r\n        console.log('reached clear')\r\n        localStorage.clear();\r\n        this.setState({\r\n            loggedout: true\r\n        })\r\n    }\r\n    handleChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    render(){\r\n        const {loggedout} = this.state;\r\n        let pageContent;\r\n        if(loggedout){\r\n            pageContent = \r\n            <div className=\"login\">\r\n                    <p>You've been logged out. Get back to your book.</p>\r\n            </div>\r\n        }else{\r\n            pageContent = \r\n            <div className=\"login\">\r\n                <p><strong>Are you sure you want to sign out?</strong></p> \r\n                <div className=\"div-button\" onClick={this.handleClear}>Sign me out</div>       \r\n            </div>\r\n        }\r\n        return(\r\n            <div className=\"main-body\">\r\n            <h2>User logout</h2>\r\n            < hr />\r\n            {pageContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignOut;\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Accordion, Card, Button } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass BookForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: '',\r\n            allData: [],\r\n            submitting: false,\r\n            author: '', \r\n            title: '', \r\n            test: '',\r\n            status: '', \r\n            format: '',\r\n            rating: '',\r\n            bookid: '',\r\n            editing: false,\r\n            adding: false,\r\n            form: false,\r\n            currentID: '',\r\n            date: '',\r\n            checking: false,\r\n            query: '',\r\n            searchData: [],\r\n            searchComplete: false,\r\n            searchForm: false,\r\n            searchError: false,\r\n            books: true,\r\n            description: '',\r\n            imageUrl: '',\r\n            searchloading: true,\r\n            currentlyReading: true,\r\n            searchButton: false,\r\n            googleAPIData: [],\r\n            sortedData : [],\r\n            firstName: '',\r\n            lastName: '',\r\n            required: false\r\n        }\r\n\r\n    }\r\n    componentDidMount =() => {\r\n        let usernameProps = this.props.name;\r\n        let usernameData = localStorage.getItem('username');\r\n        if(usernameProps){\r\n            this.setState({\r\n                savedusername: usernameProps,\r\n                checkusername: true,\r\n                username: usernameProps\r\n            })\r\n            // this.getAllData();\r\n            this.getGoogleAPI();\r\n            \r\n        }\r\n        else if(usernameData){\r\n            this.setState({\r\n                savedusername: usernameData,\r\n                checkusername: true,\r\n                username: usernameData\r\n            })\r\n            // this.getAllData();\r\n            this.getGoogleAPI();\r\n        }\r\n        // this.setState({username: this.props.name});\r\n        \r\n    }\r\n    sortData = () =>{\r\n        const allDataSorted = [];\r\n        const firstName = this.state.googleAPIData.filter(firstName => firstName.gs$cell.col === \"1\");\r\n        const lastName = this.state.googleAPIData.filter(lastName => lastName.gs$cell.col ===\"2\");\r\n        const username = this.state.googleAPIData.filter(username => username.gs$cell.col ===\"3\");\r\n        const id = this.state.googleAPIData.filter(id => id.gs$cell.col ===\"4\");\r\n        const title = this.state.googleAPIData.filter(title => title.gs$cell.col ===\"5\");\r\n        const author = this.state.googleAPIData.filter(author => author.gs$cell.col ===\"6\");\r\n        const date = this.state.googleAPIData.filter(date => date.gs$cell.col ===\"7\");\r\n        const status = this.state.googleAPIData.filter(status => status.gs$cell.col ===\"8\");\r\n        const rating = this.state.googleAPIData.filter(rating => rating.gs$cell.col ===\"9\");\r\n        const overview = this.state.googleAPIData.filter(overview => overview.gs$cell.col ===\"10\");\r\n        const image = this.state.googleAPIData.filter(image => image.gs$cell.col ===\"11\"); \r\n        const format = this.state.googleAPIData.filter(format => format.gs$cell.col ===\"12\");\r\n        for(let i=0; i<firstName.length; i++){\r\n            allDataSorted.push({\r\n                firstName: firstName[i].content.$t,              \r\n                lastName: lastName[i].content.$t,               \r\n                username: username[i].content.$t,              \r\n                id: id[i].content.$t,               \r\n                title: title[i].content.$t,               \r\n                author: author[i].content.$t,              \r\n                date: date[i].content.$t,               \r\n                status: status[i].content.$t,              \r\n                rating: rating[i].content.$t,              \r\n                overview: overview[i].content.$t,              \r\n                image: image[i].content.$t,               \r\n                format: format[i].content.$t   \r\n            })\r\n        }\r\n        this.setState({\r\n            sortedData: allDataSorted\r\n        });\r\n    }\r\n    getGoogleAPI = () => {\r\n        fetch('https://spreadsheets.google.com/feeds/cells/1HhGhrqm2vagTS5wKxNYp7rh89en4ZVNkLfPd4DYCcrI/1/public/full?alt=json')\r\n            .then( (response) => {\r\n                return response.json()\r\n            }).then( (json) => {\r\n                this.setState({\r\n                    googleAPIData: json.feed.entry\r\n                });\r\n                this.sortData();\r\n            }).then( () => {\r\n                let userData = this.state.sortedData.filter(one => one.username === this.state.username);\r\n                console.log('userdata', userData)\r\n                if(userData.length === 0){\r\n                    this.setState({currentID: 1});\r\n                }else{\r\n                    let allIDs =[];\r\n                    for(var b=0 ; b<userData.length ; b++){\r\n                        allIDs.push(parseInt(userData[b].id.split('id=')[1]));\r\n                    }\r\n                    let sortedIDs= allIDs.sort((b, a) => b - a)\r\n                    let newID = sortedIDs[allIDs.length -1] + 1;\r\n                    this.setState({currentID: newID})\r\n                }       \r\n            }).then( () => {\r\n                this.setState({\r\n                    searchloading: false,\r\n                    searchButton: true\r\n                });\r\n            })\r\n    }\r\n    getAllData = () => {\r\n        fetch('https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351')\r\n            .then( (response) => {\r\n                return response.json()\r\n            }).then( (json) => {\r\n                this.setState({\r\n                    allData: json\r\n                })\r\n            }).then( () => {\r\n                let userData = this.state.allData.filter(one => one.username === this.state.username);\r\n                if(userData.length === 0){\r\n                    this.setState({currentID: 1});\r\n                }else{\r\n                    let allIDs =[];\r\n                    for(var b=0 ; b<userData.length ; b++){\r\n                        allIDs.push(parseInt(userData[b].id.split('id=')[1]));\r\n                    }\r\n                    let sortedIDs= allIDs.sort((b, a) => b - a)\r\n                    let newID = sortedIDs[allIDs.length -1] + 1;\r\n                    this.setState({currentID: newID})\r\n                } \r\n            }).then( () => {\r\n                this.setState({\r\n                    searchloading: false,\r\n                    searchButton: true\r\n                });\r\n            })\r\n    }\r\n    handleSearch = (e) =>{\r\n        e.preventDefault()\r\n        this.setState({\r\n            searchloading: true,\r\n            searchError: false,\r\n            searchForm: false\r\n        })\r\n        fetch('https://www.googleapis.com/books/v1/volumes?q=\"'+this.state.query+'\"')\r\n        .then( response =>  response.json())\r\n        .then( (json) => {\r\n            if(json.totalItems > 0){\r\n                this.setState({\r\n                    searchData: json, \r\n                    searchComplete: true,\r\n                    searchloading: false\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    query: '',\r\n                    searchError: true,\r\n                    searchForm: true,\r\n                    searchloading: false\r\n                })\r\n                return json;\r\n            }\r\n           \r\n        })\r\n    }\r\n    showSearchForm = () =>{\r\n        this.setState({\r\n            currentlyReading: false,\r\n            searchButton: false,\r\n            books: false,\r\n            searchForm: true,\r\n            author: '', \r\n            title: '', \r\n            status: 'select-status', \r\n            format: 'select-format', \r\n            rating: 'select-rating', \r\n            date: ''\r\n        })\r\n    }\r\n    addSearchResults = (title, author, description, image, e) => {\r\n        console.log('status is', this.state.status, 'rating is ', this.state.rating)\r\n        var currentDate = moment().toDate();\r\n        e.preventDefault();\r\n        this.setState({\r\n            searchComplete: false,\r\n            searchForm: false,\r\n            query: '',\r\n            adding: true,\r\n            form: true,\r\n            title: title,\r\n            author: author[0],\r\n            description: description, \r\n            imageUrl: image,\r\n            rating: 'select-rating',\r\n            date: currentDate\r\n        })\r\n    }\r\n    searchAgain = () => {\r\n        this.setState({\r\n            searchForm: true,\r\n            searchComplete: false,\r\n            query: ''\r\n        })\r\n    }\r\n    showAddForm = () =>{\r\n        this.setState({\r\n            adding: true,\r\n            searchComplete: false,\r\n            searchForm: false,\r\n            form: true\r\n        })\r\n    }\r\n    handleSubmit = event => {\r\n        if(this.state.status === 'select-status'){\r\n            console.log('not filled out')\r\n            event.preventDefault()\r\n            this.setState({\r\n                required: true\r\n            })\r\n        }else{\r\n            console.log('done')\r\n            \r\n        const dataSend = {\r\n            firstName: 'null',\r\n            lastName: 'null',\r\n            date: this.state.date,\r\n            author: this.state.author,\r\n            username: this.state.username,\r\n            title: this.state.title,\r\n            status: this.state.status,\r\n            format: this.state.format,\r\n            id: this.state.username+'id='+this.state.currentID,\r\n            rating: this.state.rating,\r\n            overview: this.state.description,\r\n            image: this.state.imageUrl\r\n        }\r\n        event.preventDefault()\r\n        this.setState({\r\n            searchloading: true,\r\n            form: false,\r\n        })\r\n        fetch('https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351', {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(dataSend)\r\n        }).then( (response) => {\r\n            this.setState({\r\n                searchloading: false,\r\n                author: '', \r\n                title: '', \r\n                status: 'select-status', \r\n                format: 'select-format', \r\n                rating: 'select-rating', \r\n                date: '',\r\n                rating: '',\r\n                description: '',\r\n                imageUrl: '',\r\n                adding: false,\r\n                books: true, \r\n                editing: false,\r\n                currentlyReading: true,\r\n                searchButton: true\r\n            })\r\n            this.getGoogleAPI();\r\n            return response.json()  \r\n        });\r\n    }\r\n    }\r\n    updateBook = (each, e) =>{  \r\n        console.log('rating is ', each.rating)\r\n        var updateRating = each.rating === 'select-rating' ? 'select-rating' : each.rating;\r\n        var dateUpdating = each.status === 'Finished' ? moment(each.date).toDate() : moment().toDate();\r\n        console.log('updating ' + each.title + ' with status of '+ each.status + 'to date of ' + dateUpdating)\r\n        this.setState({\r\n            books: false,\r\n            currentlyReading: false,\r\n            editing: true,\r\n            form: true,\r\n            searchButton: false\r\n        })\r\n        this.setState({\r\n            date: dateUpdating,\r\n            author: each.author,\r\n            title: each.title, \r\n            status: each.status, \r\n            format: each.format,\r\n            rating: updateRating,\r\n            bookid: each.id\r\n            \r\n        })\r\n    }\r\n    handleSubmitEdit = event => {\r\n        const dataEdit = {\r\n            author: this.state.author,\r\n            title: this.state.title,\r\n            rating: this.state.rating,\r\n            status: this.state.status,\r\n            format: this.state.format,\r\n            date: this.state.date\r\n        }\r\n        event.preventDefault()\r\n        this.setState({\r\n            searchloading: true,\r\n            form: false\r\n        })\r\n        fetch('https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351/id/'+this.state.bookid, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PATCH',\r\n            body: JSON.stringify(dataEdit)\r\n        }).then( (response) => {\r\n            this.setState({\r\n                author: '', \r\n                title: '', \r\n                status: 'select-status', \r\n                format: 'select-format', \r\n                rating: 'select-rating', \r\n                date: '',\r\n                editing: false\r\n            })\r\n        }).then( () =>{\r\n            \r\n                    this.getGoogleAPI();\r\n                    this.setState({\r\n                        books: true,\r\n                        searchloading: false,\r\n                        currentlyReading: true,\r\n                        searchButton: true\r\n                    })\r\n            \r\n           \r\n        })\r\n    }\r\n    handleChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    handleDateChange = date => {\r\n        this.setState({date: date})\r\n    }\r\n    updateStatus = e => {\r\n        this.setState({\r\n            status: e.target.value,\r\n            required: false\r\n        })\r\n        console.log('rating here', this.state.rating)\r\n    }\r\n    updateTest = e => {\r\n        this.setState({\r\n            test: e.target.value,\r\n        })\r\n    }\r\n    updateFormat = e => {\r\n        this.setState({\r\n            format: e.target.value\r\n        })\r\n    }\r\n    updateRating = (e) => {\r\n        this.setState({\r\n            rating: e.target.value\r\n        })\r\n    }\r\n    checkDelete = (e)=> {\r\n        e.preventDefault();\r\n        this.setState({\r\n            checking: true\r\n        })\r\n    }    \r\n    handleDeleteYes = (e) =>{\r\n        e.preventDefault();\r\n        this.setState({\r\n            searchloading: true,\r\n            checking: false,\r\n            form: false,\r\n            editing: false\r\n        })\r\n        fetch(\"https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351/id/\"+this.state.bookid, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'  \r\n        }).then( (response) => {\r\n            setTimeout(() =>{\r\n                    this.getGoogleAPI();\r\n                    this.setState({\r\n                        searchloading: false,\r\n                        books:true, \r\n                        searchButton: true,\r\n                        currentlyReading: true\r\n                    })\r\n            }, 1000);\r\n        });\r\n       \r\n    }\r\n    handleDeleteNo = () => {\r\n        this.setState({checking: false})\r\n    }\r\n    removeForm = () => {\r\n        this.setState({\r\n            searchForm: false,\r\n            form: false,\r\n            books: true,\r\n            searchComplete: false,\r\n            query: '',\r\n            adding: false,\r\n            author: '',\r\n            title: '', \r\n            status: 'select-status', \r\n            format: 'select-format', \r\n            rating: 'select-rating', \r\n            date: '',\r\n            rating: '',\r\n            editing: false,\r\n            currentlyReading: true,\r\n            searchButton: true,\r\n            checking: false,\r\n            required: false\r\n        })\r\n    }\r\n    renderSearchData(){\r\n        let submitting = this.state.submitting;\r\n        let bookData = this.state.searchData;\r\n        let currentBooks = [];\r\n        for(var b=0; b < bookData.items.length; b++){\r\n            let activeBook = bookData.items[b].volumeInfo;\r\n            let image;\r\n            activeBook.imageLinks ? image = activeBook.imageLinks.thumbnail : image = '';\r\n            currentBooks.push(\r\n            <Col key={bookData.items[b].id} md={6}>\r\n            <div className=\"eachbook\">\r\n                    <p><strong>{activeBook.title}<em>{activeBook.subtitle ? ', '+activeBook.subtitle : '' }</em></strong></p>\r\n                    <p>{activeBook.authors}</p>\r\n                    <p>{activeBook.imageLinks ? <img src={image} alt={activeBook.title} /> : '' }</p>\r\n                    <Accordion defaultActiveKey=\"0\">\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                    Overview (see details)\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"1\">\r\n                                <Card.Body><p>{activeBook.description}</p></Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>    \r\n                    <input type='submit' className=\"add-button search\" disabled={submitting} onClick={(e) =>this.addSearchResults(activeBook.title, activeBook.authors, activeBook.description, image, e)} value={submitting ? 'Loading...' : 'Add '+activeBook.title}></input>\r\n            </div>\r\n            </Col>\r\n            )\r\n        }\r\n        return currentBooks;\r\n    }\r\n    renderReading(){\r\n        return this.state.sortedData.filter(book => book.username === this.state.username && book.status === \"Currently-Reading\").map((each) => \r\n            <Row className='reading-now'>\r\n                <Col sm={{ span: 3, offset: 4 }}>\r\n                <div key={each.id}>\r\n                    <h4><em>{each.title}</em></h4> \r\n                </div>\r\n                    {!this.state.form &&\r\n                        <div>\r\n                            <label htmlFor=\"edit\"></label>\r\n                            <input type=\"submit\" value=\"Update\" id=\"edit\" onClick={(e) => this.updateBook(each,e)}></input>\r\n                        </div>\r\n                    }\r\n               \r\n                </Col>\r\n                <Col sm={2}>\r\n                    <span>{each.image ? <img src={each.image} alt={each.title} />  :''}</span>\r\n                </Col>\r\n               \r\n            </Row>\r\n        )\r\n    }\r\n    renderFinishedData(){\r\n        return this.state.sortedData.filter(one => one.username === this.state.username && one.title && one.status === \"Finished\").sort((a,b) => new moment(a.date) - new moment(b.date)).map((each) => \r\n                <Col key={each.id} className=\"book-card\" md={4}>\r\n                     <h4><em>{each.title}</em>&nbsp;{each.format === 'Audio' ? <i className=\"fa fa-headphones\" aria-hidden=\"true\"></i> : <i className=\"fa fa-book\" aria-hidden=\"true\"></i>}</h4>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <p>{each.author}</p>\r\n                            <p className=\"card-smaller\">{each.status} {moment(each.date).isValid() ? moment(each.date).format('MMM D YYYY'): \"\"} </p>\r\n                            <p className=\"card-smaller\">{each.rating === 'select-rating' ? '' : each.rating} <a className=\"thrift-link\" href={\"https://www.thriftbooks.com/browse/?b.search=\"+each.title+' ' +each.author} target=\"_blank\"><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></a></p>\r\n                            {!this.state.form &&\r\n                                <div>\r\n                                    <label htmlFor=\"edit\"></label>\r\n                                    <input type=\"submit\" value=\"Update\" id=\"edit\" onClick={(e) => this.updateBook(each,e)}></input>\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            {each.image ?\r\n                                <img src={each.image} alt={each.title} />\r\n                                :\r\n                                ''\r\n                            }\r\n                            \r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    {each.overview ? \r\n                        <Accordion defaultActiveKey=\"0\">\r\n                                    <Card>\r\n                                        <Card.Header>\r\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                                Read summary\r\n                                            </Accordion.Toggle>\r\n                                        </Card.Header>\r\n                                        <Accordion.Collapse eventKey=\"1\">\r\n                                            <Card.Body><p>{each.overview}</p></Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                        </Accordion>  \r\n                        : \r\n                    <p>(No summary available)</p> }\r\n                </Col>\r\n        )\r\n    }\r\n    renderWantData(){\r\n        return this.state.sortedData.filter(one => one.username === this.state.username && one.title && one.status === \"Want-to-read\").map((each) => \r\n                <Col key={each.id} className=\"book-card\" md={4}>\r\n                     <h4><em>{each.title}</em>&nbsp;{each.format === 'Audio' ? <i className=\"fa fa-headphones\" aria-hidden=\"true\"></i> : <i className=\"fa fa-book\" aria-hidden=\"true\"></i>}</h4>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <p>{each.author}</p>\r\n                            \r\n                            <p className=\"card-smaller\"><a className=\"thrift-link\" href={\"https://www.thriftbooks.com/browse/?b.search=\"+each.title+' ' +each.author} target=\"_blank\"><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></a></p>\r\n                            {!this.state.form &&\r\n                                <div>\r\n                                    <label htmlFor=\"edit\"></label>\r\n                                    <input type=\"submit\" value=\"Update\" id=\"edit\" onClick={(e) => this.updateBook(each,e)}></input>\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            {each.image ?\r\n                                <img src={each.image} alt={each.title} />\r\n                                :\r\n                                ''\r\n                            }\r\n                            \r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    {each.overview ? \r\n                        <Accordion defaultActiveKey=\"0\">\r\n                                    <Card>\r\n                                        <Card.Header>\r\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                                Read summary\r\n                                            </Accordion.Toggle>\r\n                                        </Card.Header>\r\n                                        <Accordion.Collapse eventKey=\"1\">\r\n                                            <Card.Body><p>{each.overview}</p></Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                        </Accordion>  \r\n                        : \r\n                    <p>(No summary available)</p> }\r\n                </Col>\r\n        )\r\n    }\r\n   \r\n    render(){\r\n    const { format, checking, submitting, author, title, test, status, sortedData, date, query, editing, rating, searchComplete, searchError, searchForm, searchloading, form, books, currentlyReading, searchButton} = this.state;\r\n    const allBooks = sortedData.filter(book => book.username === this.state.username)\r\n    const bookCount = sortedData.filter(book => book.username === this.state.username).length;\r\n    \r\n        return(\r\n            <div className=\"main-body\">\r\n                {bookCount > 1 && allBooks.filter(book => book.status === \"Currently-Reading\").length > 0 && currentlyReading && \r\n                    <div>\r\n                     <h2>Currently reading:</h2>\r\n                      {this.renderReading()}\r\n                            <hr />\r\n                    </div>\r\n                }\r\n                {!books && !searchloading && !form &&\r\n                    <div id=\"close-button\"><button  onClick={this.removeForm}>x</button></div>\r\n                }\r\n                {searchButton && \r\n                    <input type='submit' className=\"add-button\" value=\"Find a book\" onClick={this.showSearchForm}></input>\r\n                }\r\n                {searchloading && \r\n                    <div className=\"progress-infinite\">\r\n                        <div className=\"progress-bar3\" >\r\n                        </div>                       \r\n                    </div> \r\n                }\r\n                {searchError &&\r\n                        <div>\r\n                           <p><strong>Looks like we can't find that book. Search again below!</strong></p>\r\n                        </div>\r\n                }\r\n                {!searchComplete && searchForm &&\r\n                    <div>\r\n                        <form onSubmit={this.handleSearch} className={submitting ? 'loading' : 'search-form'}>\r\n                            <input placeholder=\"Search for books by title...\" type=\"text\" name='query' value={query} onChange={this.handleChange} />\r\n                            <input type='submit' value=\"Search\"></input>\r\n                        </form>\r\n                        <input className=\"manual\" type='submit'  onClick={this.showAddForm} disabled={submitting} value='Manually enter a book'></input>\r\n                    </div>\r\n                   \r\n                }\r\n              \r\n                {searchComplete &&\r\n                    <div id=\"search-results\">\r\n                         <h3>Found these books:</h3>\r\n                         <input  type='submit' className=\"add-button\" onClick={this.searchAgain}  value='Search again'></input>\r\n                         <Row>\r\n                        {this.renderSearchData()}\r\n                        </Row>\r\n                    </div>\r\n                }\r\n\r\n                {form && \r\n                    <div>\r\n                    <form onSubmit={this.state.adding ? this.handleSubmit : this.handleSubmitEdit} className='submit-form'>\r\n                    <div id=\"close-form\"><button  onClick={this.removeForm}>x</button></div>\r\n                        {!checking &&\r\n                        <div>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <label >Title:<br />\r\n                                    <input type=\"text\" name='title' value={title} onChange={this.handleChange} />\r\n                                </label>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <label >Author:<br />\r\n                                    <input type=\"text\" name='author' value={author} onChange={this.handleChange} /> \r\n                                </label>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                    <label>Format: <br />\r\n                                    <select defaultValue={format} onChange={this.updateFormat}>\r\n                                        <option value=\"select-format\" disabled>Select format</option>\r\n                                        <option value=\"Audio\">Audio</option>\r\n                                        <option value=\"Text\">Text</option>\r\n                                    </select>\r\n                                </label>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <label>Status*:  <br />\r\n                                    {this.state.required &&\r\n                                        <span className=\"required\">This is required</span>\r\n                                    }\r\n                                    <select required defaultValue={status} onChange={this.updateStatus}>\r\n                                        <option value=\"select-status\" disabled>Select status</option>\r\n                                        <option value=\"Finished\">Finished</option>\r\n                                        <option value=\"Currently-Reading\">Currently reading</option>\r\n                                        <option value=\"Want-to-read\">Want to read</option>\r\n                                    </select>\r\n                                </label>\r\n                            </Col>\r\n                            {status === \"Finished\" &&\r\n                            <React.Fragment>\r\n                            <Col md={4}>\r\n                                <label>Recommendation: <br />\r\n                                    <select defaultValue={rating} onChange={this.updateRating}>\r\n                                        <option value=\"select-rating\" disabled>Select rating</option>\r\n                                        <option value=\"Highly Recommend\">Highly recommend</option>\r\n                                        <option value=\"Recommend\">Recommend</option>\r\n                                        <option value=\"Do Not Recommend\">Don't recommend</option>\r\n                                        <option value=\"Do Not Read\">Please do not read</option>\r\n                                    </select>\r\n                                </label>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <label >Finished on:</label><br />\r\n                                <DatePicker selected={date} onChange={this.handleDateChange}  />                                \r\n                            </Col>\r\n                            </React.Fragment>\r\n                            }\r\n                            \r\n                        </Row>\r\n                        </div>\r\n                        }\r\n                         {!checking &&\r\n                            <div id=\"input-section\">\r\n                                <input type='submit'  value={this.state.adding ? 'Add Book' : 'Update Book'}></input>\r\n                                {this.state.editing && this.state.form &&\r\n                                    <input className=\"delete\" type='submit' onClick={this.checkDelete} value='Delete book'></input>\r\n                                }\r\n                            </div>\r\n                         }\r\n                            {checking &&\r\n                            <div id=\"delete-section\">\r\n                                <div>\r\n                                    <h3>Are you sure you want to delete {title} from your list?</h3>\r\n                                    <label htmlFor=\"delete-yes\"></label>\r\n                                    <input className=\"delete check\" type=\"submit\" value=\"Yes\" id=\"delete-yes\" onClick={this.handleDeleteYes}></input>\r\n                                    <label htmlFor=\"delete-no\"></label>\r\n                                    <input className=\"delete check\" type=\"submit\" value=\"No\" id=\"delete-no\" onClick={this.handleDeleteNo}></input>\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        \r\n                    </form>   \r\n                    </div>\r\n                }\r\n                {books && bookCount > 1 &&\r\n                    \r\n                    <div id=\"booklist\"><h2>Your book list</h2>\r\n                     {bookCount > 1 && allBooks.filter(book => book.status === \"Finished\").length > 0 &&\r\n                        <div>\r\n                            <h3>Finished books</h3>\r\n                            <Row>\r\n                                {this.renderFinishedData()}\r\n                            </Row>\r\n                        </div>\r\n                     }\r\n                      {bookCount > 1 && allBooks.filter(book => book.status === \"Want-to-read\").length > 0 &&\r\n                        <div>\r\n                            <h3>Books I want to read</h3>\r\n                            <Row>\r\n                                {this.renderWantData()}\r\n                            </Row>\r\n                        </div>\r\n                     }\r\n                    \r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookForm;\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport {Accordion, Card, Button, Col, Row } from 'react-bootstrap';\r\n\r\nclass FriendData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           friendData: [],\r\n           searchloading: true,\r\n           firstName: ''\r\n        }\r\n\r\n    }\r\n    componentDidMount =() => {\r\n        this.setState({\r\n            friendData: this.props.data,\r\n            firstName: this.props.firstName[0].toUpperCase() + this.props.firstName.slice(1),\r\n            searchloading: false\r\n        })\r\n        console.log('new component', this.props.data)\r\n    }\r\n    \r\n    renderReading(){\r\n        return this.state.friendData.filter(book => book.status === \"Currently-Reading\").map((each) => \r\n        <Row className='reading-now'>\r\n                <Col sm={{ span: 3, offset: 4 }}>\r\n                <div key={each.id}>\r\n                    <h4><em>{each.title}</em></h4> \r\n                </div>\r\n                </Col>\r\n                <Col sm={2}>\r\n                    <span>{each.image ? <img src={each.image} alt={each.title} />  :''}</span>\r\n                </Col>\r\n               \r\n            </Row>\r\n        )\r\n    }\r\n    renderFinishedData(){\r\n        return this.state.friendData.filter(one => one.title && one.status === \"Finished\").sort((a,b) => new moment(a.date) - new moment(b.date)).map((each, index) => \r\n        <Col key={each.id} className=\"book-card\" md={4}>\r\n        <h4><em>{each.title}</em>&nbsp;{each.format === 'Audio' ? <i className=\"fa fa-headphones\" aria-hidden=\"true\"></i> : <i className=\"fa fa-book\" aria-hidden=\"true\"></i>}</h4>\r\n        <Row>\r\n            <Col sm={8}>\r\n                <p>{each.author}</p>\r\n                <p className=\"card-smaller\">{each.status} {moment(each.date).isValid() ? moment(each.date).format('MMM D YYYY'): \"\"} </p>\r\n                <p className=\"card-smaller\">{each.rating} <a className=\"thrift-link\" href={\"https://www.thriftbooks.com/browse/?b.search=\"+each.title+' ' +each.author} target=\"_blank\"><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></a></p>\r\n            </Col>\r\n            <Col sm={4}>\r\n                {each.image ?\r\n                    <img src={each.image} alt={each.title} />\r\n                    :\r\n                    ''\r\n                }\r\n                \r\n            </Col>\r\n            \r\n        </Row>\r\n        {each.overview ? \r\n            <Accordion defaultActiveKey=\"0\">\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                    Read summary\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"1\">\r\n                                <Card.Body><p>{each.overview}</p></Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n            </Accordion>  \r\n            : \r\n        <p>(No summary available)</p> }\r\n   </Col>\r\n        )\r\n    }\r\n    renderWantData(){\r\n        return this.state.friendData.filter(one => one.title && one.status === \"Want-to-read\").map((each) => \r\n                <Col key={each.id} className=\"book-card\" md={4}>\r\n                     <h4><em>{each.title}</em>&nbsp;{each.format === 'Audio' ? <i className=\"fa fa-headphones\" aria-hidden=\"true\"></i> : <i className=\"fa fa-book\" aria-hidden=\"true\"></i>}</h4>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <p>{each.author}</p>\r\n                            <p className=\"card-smaller\"><a className=\"thrift-link\" href={\"https://www.thriftbooks.com/browse/?b.search=\"+each.title+' ' +each.author} target=\"_blank\"><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></a></p>\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            {each.image ?\r\n                                <img src={each.image} alt={each.title} />\r\n                                :\r\n                                ''\r\n                            }\r\n                            \r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    {each.overview ? \r\n                        <Accordion defaultActiveKey=\"0\">\r\n                                    <Card>\r\n                                        <Card.Header>\r\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                                Read summary\r\n                                            </Accordion.Toggle>\r\n                                        </Card.Header>\r\n                                        <Accordion.Collapse eventKey=\"1\">\r\n                                            <Card.Body><p>{each.overview}</p></Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                        </Accordion>  \r\n                        : \r\n                    <p>(No summary available)</p> }\r\n                </Col>\r\n        )\r\n    }\r\n    render(){\r\n    const { friendData, searchloading, firstName} = this.state;\r\n    const allBooks = friendData;\r\n    const bookCount = friendData.length;\r\n    return(\r\n            <div className=\"main-body\">\r\n                {searchloading && \r\n                    <div class=\"progress-infinite\">\r\n                        <div class=\"progress-bar3\" >\r\n                        </div>                       \r\n                    </div> \r\n                }\r\n                {bookCount > 1 && allBooks.filter(book => book.status === \"Currently-Reading\").length > 0 && !searchloading &&\r\n                <div>\r\n                    <h2>Currently reading:</h2>\r\n                    <h3> {this.renderReading()}</h3>\r\n                        <hr />\r\n                </div>\r\n                }\r\n                <div id=\"booklist\"><h2>{firstName}'s book list</h2>\r\n                    {bookCount > 1 && allBooks.filter(book => book.status === \"Finished\").length > 0 &&\r\n                        <div>\r\n                            <h3>Finished books</h3>\r\n                            <Row>\r\n                                {this.renderFinishedData()}\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                    {bookCount > 1 && allBooks.filter(book => book.status === \"Want-to-read\").length > 0 &&\r\n                        <div>\r\n                            <h3>Books {firstName} wants to read</h3>\r\n                            <Row>\r\n                                {this.renderWantData()}\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FriendData;\r\n\r\n","import React from 'react';\r\nimport FriendData from './friendData';\r\n\r\n\r\n\r\nclass FindUser extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username: '',\r\n            userLast: '',\r\n            allData: [],\r\n            userFoundData: [],\r\n            showForm: true,\r\n            showResults: true,\r\n            friendData: [],\r\n            pickedUser: '',\r\n            submitting: false,\r\n            searchloading: false,\r\n            selectedFirst: '',     \r\n        }\r\n\r\n    }\r\n    componentDidMount = () =>{\r\n        this.setState({\r\n            username: this.props.username\r\n        })\r\n    }\r\n\r\n    handleChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            pickedUser: this.state.userLast,\r\n            searchloading: true,\r\n            showForm: false\r\n        })\r\n        fetch('https://sheet.best/api/sheets/f1c6e2c7-2b3d-4f85-8e10-39c1cf415351')\r\n        .then( (response) => {\r\n            return response.json()\r\n        }).then( (json) => {\r\n            this.setState({\r\n                allData: json\r\n            })\r\n        }).then( () => {\r\n            this.setState({\r\n                searchloading: false,\r\n                userLast: ''\r\n            })\r\n        })\r\n    }\r\n    searchAgain = () => {\r\n        this.setState({\r\n            showForm: true,\r\n            showResults: true,\r\n            selectedFirst: '',\r\n            friendData: []\r\n        })\r\n    }\r\n    friendsBooks(user, first){\r\n        let friendBooks = this.state.allData.filter(book => book.username === user);\r\n        console.log('username', user)\r\n        this.setState({\r\n            friendData: friendBooks,\r\n            showResults: false,\r\n            selectedFirst: first\r\n        })\r\n    }\r\n    renderFriend(){\r\n        function capFirstLetter(string){\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        }\r\n        return this.state.allData.filter(friend => friend.lastName === this.state.pickedUser.toLowerCase()).map((each) => \r\n            <div key={each.id} className=\"found-friend\">{capFirstLetter(each.firstName)} {capFirstLetter(each.lastName)}\r\n                <button type=\"submit\" className=\"div-button friend\" onClick={() => this.friendsBooks(each.username, each.firstName)} >View books</button>   \r\n            </div>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    render(){\r\n        const {userLast, submitting, showForm, friendData, showResults, pickedUser, allData, searchloading, selectedFirst} = this.state;\r\n        let numUsersFound =  allData.filter(friend => friend.lastName === pickedUser.toLowerCase()).length;\r\n        return(\r\n            <div className=\"main-body\">\r\n                <h2>Find your friends. Read their books.</h2>\r\n                <hr  />\r\n                {searchloading && \r\n                    <div class=\"progress-infinite\">\r\n                        <div class=\"progress-bar3\" >\r\n                        </div>                       \r\n                    </div> \r\n                }\r\n                {showForm && !searchloading &&\r\n                    <div>\r\n                        <p><strong>Search for your friends by last name</strong></p>\r\n                        <div className=\"login\">\r\n                        <form onSubmit={this.handleSubmit} className={submitting ? 'loading' : 'submit-form'}>\r\n                            <label >Last name:<br />\r\n                                    <input type=\"text\" name='userLast' value={userLast} onChange={this.handleChange} /> \r\n                            </label>\r\n                            <div id=\"input-section\">\r\n                                <input type='submit' disabled={submitting} value='Search'></input>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {!showForm && !searchloading &&\r\n                     <div className=\"div-button\" onClick={this.searchAgain}>Search again</div>   \r\n                }\r\n                {numUsersFound === 1 && !showForm && !searchloading &&\r\n                    <div className=\"friend-results\">\r\n                        {showResults &&\r\n                            <div><h3>Found user:</h3>&nbsp;<span>{this.renderFriend()}</span></div>\r\n                        }\r\n                        {friendData.length > 0 &&\r\n                            <FriendData data={friendData} firstName={selectedFirst} />\r\n                        }\r\n                    </div>  \r\n                }\r\n                 {numUsersFound >1  && !showForm &&\r\n                    <div className=\"friend-results\">\r\n                         {showResults &&\r\n                            <div><h3>Found users:</h3>\r\n                           \r\n                                {this.renderFriend()}\r\n                            </div>\r\n                         }\r\n                        {friendData.length > 1 &&\r\n                            <FriendData data={friendData} firstName={selectedFirst}/>\r\n                        }\r\n                    </div>  \r\n                }\r\n                {numUsersFound === 0 && !showForm && !searchloading &&\r\n                    <div className=\"friend-results\">\r\n                        No users found\r\n                    </div>  \r\n                }\r\n                 \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindUser;\r\n\r\n","import React from 'react';\r\nimport { Route, NavLink, BrowserRouter as Router } from 'react-router-dom';\r\nimport Home from './components/home';\r\nimport SignUp from './components/signup';\r\nimport SignIn from './components/signin';\r\nimport SignOut from './components/signout';\r\nimport BookForm from './components/bookform';\r\nimport FindUser from './components/finduser';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        checkusername: false,\r\n        savedusername: ''    }\r\n  }\r\n  componentDidMount = () => {\r\n      let usernameData = localStorage.getItem('username');\r\n      if(usernameData){\r\n          this.setState({\r\n              savedusername: usernameData,\r\n              checkusername: true\r\n          })\r\n      }\r\n  }\r\n  updateNav = () =>{\r\n    console.log('update nav')\r\n    let usernameData = localStorage.getItem('username');\r\n    this.setState({\r\n      savedusername: usernameData,\r\n      checkusername: !this.state.checkusername\r\n  })\r\n  }\r\n  render(){\r\n    const { checkusername, savedusername } = this.state;\r\n        let mainNav;\r\n        mainNav =\r\n          <Router>\r\n                {checkusername &&\r\n                  <React.Fragment>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/\">  <i className=\"fa fa-book\" aria-hidden=\"true\"></i></NavLink>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/sign-out\">Logout</NavLink>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/books\" >Your books</NavLink>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/friend-find\" ><i className=\"fa fa-search\" aria-hidden=\"true\"></i>&nbsp;Friends' Books</NavLink>\r\n                  </React.Fragment>\r\n                }\r\n                  {!checkusername &&\r\n                  <React.Fragment>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/\">  <i className=\"fa fa-book\" aria-hidden=\"true\"></i></NavLink>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/sign-up\">Sign Up</NavLink>\r\n                    <NavLink exact activeClassName=\"active\" to=\"/sign-in\" >Login</NavLink>\r\n                  </React.Fragment>\r\n                  }\r\n                   <React.Fragment>\r\n                    <Route exact path=\"/sign-out\" render={() => <SignOut updateNav={this.updateNav} username={savedusername}/>} />\r\n                    <Route exact path=\"/books\" render={() => <BookForm name={this.state.savedusername} />} />\r\n                    <Route exact path=\"/sign-up\" render={() => <SignUp updateNav={this.updateNav}/>}  />\r\n                    <Route exact path=\"/sign-in\"  render={() => <SignIn updateNav={this.updateNav}/>} />\r\n                    <Route exact path=\"/\"  render={() => <Home updateNav={this.updateNav}/>} />\r\n                    <Route exact path=\"/friend-find\" render={() => <FindUser username={savedusername}/>} />\r\n\r\n                  </React.Fragment>\r\n          </Router>\r\n    return(\r\n      <div className=\"App\">\r\n        <header className=\"App-header\" >\r\n          <h1>Book Ends</h1>\r\n        </header>\r\n        <article>\r\n        <div className=\"navigation\">\r\n          {mainNav}\r\n        </div>\r\n        </article>\r\n       \r\n      </div>\r\n    \r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mug-book.c6e5ed7e.png\";","module.exports = __webpack_public_path__ + \"static/media/open-book.c95a880f.png\";"],"sourceRoot":""}